<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spiiin&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://spiiin.github.io/"/>
  <updated>2020-09-01T18:13:25.949Z</updated>
  <id>http://spiiin.github.io/</id>
  
  <author>
    <name>spiiin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Уровень программирования: Middle</title>
    <link href="http://spiiin.github.io/blog/15798/"/>
    <id>http://spiiin.github.io/blog/15798/</id>
    <published>2020-08-12T08:58:08.000Z</published>
    <updated>2020-09-01T18:13:25.949Z</updated>
    
    <content type="html"><![CDATA[<p>Несколько очень часто встречающих у программистов-новичков ошибок<br><a id="more"></a></p><p>…</p><p><strong>1. Использование примитивов вместо высокоуровневых абстракций</strong></p><p>Новички часто пишут код “с нуля”, забывая о возможностях используемых фреймворков или библиотек. Фактически это просто неумение работать со сложными типами и игнорирование возможностей системы типов используемого языка.</p><blockquote><p>Каждый раз, когда необходимо завести переменную типа <code>int</code> - подумайте, действительно ли нужен просто целочисленный тип, или же с помощью типа можно сказать ещё что-то полезное о переменной</p></blockquote><p><strong>2. Реализация всей логики в одной функции</strong></p><p>Если какой-то кусок кода можно вынести в именованную функцию (даже если она не будет переиспользоваться), стоит так сделать. Функции проще объединять в классы или модули, чем “голый” код и разрастающиеся безымянные функции. Это нужно, чтобы уменьшить вероятность копи-пасты кода (точнее даже, умеьшения количества необходимых для изменения логики мест в коде).</p><blockquote><p>Можно ли описать одним небольшим предложением, что делает функция? Что делает класс? Что описано в файле/namespace/модуле?</p></blockquote><p><strong>3. Игнорирование инкапсуляции</strong></p><p>Инкапсуляция часто ошибочно трактуется новичками как необходимость делать все данные класса закрытыми. На практике лучше понимать и использовать её как средство сделать объект неломаемым пользователем. Т.е. если изменение переменных не может привести к тому, что класс будет находиться в невалидном состоянии - то и не надо их прятать. Если же для корректной работы с объектом у него нужно вызвать 5 разных методов в строго определенном порядке (а в других случаях программа падает), значит, нет у него никакой инкапсуляции. Пользователь объекта не должен помнить о том, что нельзя делать с объектов, чтобы не сломать его внутреннюю логику - сам объект должен быть неломаемым для пользователя.</p><blockquote><p>Таким образом в некоторых языках отказываются “ломающихся” абстракций и возможностей (<code>goto</code>, отказ от указателей, отказ от ручного освобождения памяти, отказ от мутабельности).</p></blockquote><p><strong>4. Персональный стиль</strong></p><p>По большей части, все программы пишутся несколькими людьми, так что вместо того, что писать в строго выработанном правильном стиле, стоит учиться подстраиваться под стиль уже написанного кода. Код на некоторых языках имеет стандартные правила написания, но даже с учётом этого необходимо помнить, что программа могла писаться, когда в ходу были другие правила, или же по каким-либо другим причинам использовать другой подход. Стоит писать так, чтобы стиль всей программы был одинаковый - так у читающего код будет меньше вопросов, почему в разных местах программы используются разные варианты (и какой стиль выбрать при изменении кода).</p><blockquote><p>Прежде чем писать код, прочитайте уже написанный</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Несколько очень часто встречающих у программистов-новичков ошибок&lt;br&gt;
    
    </summary>
    
    
    
      <category term="code" scheme="http://spiiin.github.io/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Карта прохождения игр</title>
    <link href="http://spiiin.github.io/blog/1563/"/>
    <id>http://spiiin.github.io/blog/1563/</id>
    <published>2020-08-04T19:11:37.000Z</published>
    <updated>2020-09-01T18:10:28.493Z</updated>
    
    <content type="html"><![CDATA[<p>Список игр на прохождение<br><a id="more"></a></p><h2 id="Current-list"><a href="#Current-list" class="headerlink" title="Current list"></a>Current list</h2><p><code>Captain Toad</code> - 90%<br><code>Age of Mythologies</code> - 50%<br><code>Gta 5</code> - 30%<br><code>The Witcher 2</code> - 5%</p><h2 id="Coop"><a href="#Coop" class="headerlink" title="Coop"></a>Coop</h2><p><code>The Stratchers</code> - 33%<br><code>Trine 4</code> - 30%<br><code>Minecraft</code> - 5%</p><h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h2><p><code>Yoshi&#39;s Crafted World</code><br><code>The Forest</code></p><h2 id="Completed"><a href="#Completed" class="headerlink" title="Completed"></a>Completed</h2><p><code>Mario+Rabbids</code><br><code>Witcher</code><br><code>Legend of Zelda: BotW</code><br><code>Warhammer 40k: Mechanicus</code></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Список игр на прохождение&lt;br&gt;
    
    </summary>
    
    
    
      <category term="games" scheme="http://spiiin.github.io/tags/games/"/>
    
  </entry>
  
  <entry>
    <title>Привет, Hexo</title>
    <link href="http://spiiin.github.io/blog/47121/"/>
    <id>http://spiiin.github.io/blog/47121/</id>
    <published>2020-07-18T14:14:53.000Z</published>
    <updated>2020-09-15T15:24:43.416Z</updated>
    
    <content type="html"><![CDATA[<p>После нескольких дней возни в очередной попытке собрать на <code>jekyll</code> статический блог, решил забить на него и попробовать использовать для блога <a href="https://hexo.io/" target="_blank" rel="noopener">hexo</a>. Получилось сильно проще и приятнее.</p><p>Во-первых, <code>hexo</code> запускается легче, и темы работают сходу. И, что удобно для блога программисту, подсветка синтаксиса кода интегрирована в движок лучше, из чего следует, что темы скорее всего будут совместимы с ней (у <code>jekyll</code> подобрать работающую пару “тема+плагин подсветки синтаксиса” оказалось очень непросто, то съезжала нумерация длинных строк, то весь блок с кодом выглядел коряво, то были проблемы с корректным отображения цвета строк или фона)</p><a id="more"></a><p>Единственное, для корректной работы тем, иногда опытным путём, необходимо выяснить, какие плагины необходимо доустановить из <a href="https://hexo.io/plugins/" target="_blank" rel="noopener">списка</a>.</p><h2 id="Темы"><a href="#Темы" class="headerlink" title="Темы"></a>Темы</h2><p>Далее, выбор <a href="https://hexo.io/themes/" target="_blank" rel="noopener">тем</a>. Достаточно много качественных и приятных глазу, из тёмных и минималистичных интересными показались:</p><ul><li><a href="https://github.com/howardliu-cn/hexo-theme-clean-dark" target="_blank" rel="noopener">clean-dark</a><ul><li><a href="https://www.howardliu.cn/" target="_blank" rel="noopener">Пример</a></li><li>Оригинальная <a href="http://pavelmakhov.com/jekyll-clean-dark" target="_blank" rel="noopener">тема для jekyll</a>, которая была взята в качестве основы для этой темы</li></ul></li><li><a href="https://github.com/maochunguang/black-blue" target="_blank" rel="noopener">black-blue</a><ul><li><a href="http://maochunguang.github.io/" target="_blank" rel="noopener">Пример</a></li></ul></li><li><a href="https://github.com/tzvetkov75/solar-theme-hexo/" target="_blank" rel="noopener">solar</a><ul><li><a href="https://tzvetkov75.github.io/demo_blog/public/" target="_blank" rel="noopener">Пример</a>.</li><li>Тема на основе <a href="https://probberechts.github.io/hexo-theme-cactus/cactus-dark/public/" target="_blank" rel="noopener">cactus</a></li></ul></li><li><a href="https://github.com/lyndonoc/hexo-theme-pandollo" target="_blank" rel="noopener">pandollo</a><ul><li><a href="https://lyndonoc.github.io/" target="_blank" rel="noopener">Пример</a></li></ul></li></ul><h2 id="Настройка-темы"><a href="#Настройка-темы" class="headerlink" title="Настройка темы"></a>Настройка темы</h2><p>Минимальная настройка темы включает правку файла <code>config.yml</code>, какие именно настройки поддерживаются, обычно написано на сайте темы.</p><p>Дополнительно, на примере темы <code>pandolo</code> - можно донастроить стиль, разобравшись с правкой файлов в папке <code>themes/pandollo/source/scss</code>.</p><p>Дальше нужно выполнить команду:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sass --style&#x3D;compressed .&#x2F;main.scss ..&#x2F;css&#x2F;main.css</span><br></pre></td></tr></table></figure></p><p>Для того, чтобы сгенерировать упакованную версию файла стилей, которую будет использовать блог.</p><p>После небольших правок получилась примерно такая “лисья” тема:<br><img src="/blog/47121/hexo-fox.png" alt="hexo-fox"></p><h2 id="Настройка-плагинов"><a href="#Настройка-плагинов" class="headerlink" title="Настройка плагинов"></a>Настройка плагинов</h2><p>Для выбранной темы пригодятся следующие плагины:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">  ...</span><br><span class="line">  "hexo-asset-link": "^2.0.1",</span><br><span class="line">  "hexo-generator-fragments": "^1.0.0",</span><br><span class="line">  "hexo-renderer-kramed": "^0.1.4",</span><br><span class="line">  "hexo-renderer-jade": "^0.5.0",</span><br><span class="line">  "hexo-abbrlink": "^2.2.1",</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/liolok/hexo-asset-link" target="_blank" rel="noopener">hexo-asset-link</a> - позволяет использовать в постах ссылку на ассет в виде относительного пути: <code>POST_NAME/asset_name.png</code> (также нужно включить в <code>config.yml</code> опцию: <code>post_asset_folder: true</code>, чтобы hexo создавал отдельную папку для ассетов к каждому посту).</p><p><a href="https://github.com/mamboer/hexo-generator-fragments" target="_blank" rel="noopener">hexo-generator-fragments</a> - необходим для темы - генерирует preview для постов для главной страницы, позволяет использоватьв в постах тег <code>&lt;!-- more --&gt;</code> чтобы отмечать краткую короткую preview-версию поста.</p><p><a href="https://github.com/sun11/hexo-renderer-kramed" target="_blank" rel="noopener">hexo-renderer-kramed</a> - плагины, содержащие в названии renderer, позволяют hexo генерировать посты из разных форматов файла. Данный плагин используется для рендера из файлов <code>*.md</code> в формате <code>github flavored markdown</code>, который используется на серверах <code>github</code>.<br>В комплекте с <code>hexo</code> уже идёт плагин, который рендерит markdown-файлы, поэтому чтобы использовать альтернативный, предварительно нужно его удалить:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-renderer-marked --save</span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/hexojs/hexo-renderer-jade" target="_blank" rel="noopener">hexo-renderer-jade</a> - необходимый для темы плагин, позволяющий рендерить pug-файлы (собственно, сама тема описана в этом формате).</p><p><a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> - генерирует для каждого поста идентификатор. Для генерации имён постов необходимо в <code>config.yml</code> добавить строку:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: posts&#x2F;:abbrlink&#x2F;</span><br></pre></td></tr></table></figure><br>Для того, чтобы указать ссылку на пост, нужно использовать тег:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Написание-постов"><a href="#Написание-постов" class="headerlink" title="Написание постов"></a>Написание постов</h2><p>После установки и настройки темы можно попробовать добавить пост:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new post hello-hexo.md</span><br></pre></td></tr></table></figure><br>Вместо md можно попробовать использовать другие форматы, для которых установлены render-плагины. В качестве редактора постов я бы посоветовал использовать (Visual Studio Code)[<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a>], вместе с плагином <a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/" target="_blank" rel="noopener">Markdown Enchanced Preview</a>.</p><p>Чтобы проверить, как выглядит пост, нужно запустить команду:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo serve</span><br></pre></td></tr></table></figure><br>и открыть в браузере страницу <code>http://127.0.0.1:4000/</code> (hexo отслеживает изменения исходников и сразу обновляет открытую страницу).</p><p>Сгенерировать статический сайт можно так:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure></p><p>Весь сгенерированный сайт будет содержаться в папке <code>public</code>, её можно заливать на хостинг руками или воспользоваться плагинами для автоматизации этих процессов.</p><h2 id="Итог"><a href="#Итог" class="headerlink" title="Итог"></a>Итог</h2><p>В кажущейся простой задаче “отрендерить markdown-статью в html”, cкрыт выбор целого стека способов решения (генераторы сайтов со своими языками, рендеры разных форматов и диалектов разметки, языки описания стилей и шаблонов сайта, темы, плагины, подсветка кода, системы развёртывания сайта).</p><p>В <code>hexo</code> эти вещи более-менее целостно сшиты вместе в единую систему, которой можно начать пользоваться достаточно быстро.</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;После нескольких дней возни в очередной попытке собрать на &lt;code&gt;jekyll&lt;/code&gt; статический блог, решил забить на него и попробовать использовать для блога &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo&lt;/a&gt;. Получилось сильно проще и приятнее.&lt;/p&gt;
&lt;p&gt;Во-первых, &lt;code&gt;hexo&lt;/code&gt; запускается легче, и темы работают сходу. И, что удобно для блога программисту, подсветка синтаксиса кода интегрирована в движок лучше, из чего следует, что темы скорее всего будут совместимы с ней (у &lt;code&gt;jekyll&lt;/code&gt; подобрать работающую пару “тема+плагин подсветки синтаксиса” оказалось очень непросто, то съезжала нумерация длинных строк, то весь блок с кодом выглядел коряво, то были проблемы с корректным отображения цвета строк или фона)&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://spiiin.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Коллекция постов в ЖЖ</title>
    <link href="http://spiiin.github.io/blog/35153/"/>
    <id>http://spiiin.github.io/blog/35153/</id>
    <published>2020-07-10T12:45:28.000Z</published>
    <updated>2020-08-04T19:27:29.052Z</updated>
    
    <content type="html"><![CDATA[<p>Коллекция ссылок на посты в ЖЖ<br><a id="more"></a></p><ul><li><a href="https://spiiin.livejournal.com/104515.html" target="_blank" rel="noopener">Устройство уровней NES-игр с блоками 16 тайлов + 1 байт палитры</a></li><li><a href="https://spiiin.livejournal.com/104049.html" target="_blank" rel="noopener">Duck Tales 2 lua script showing hidden diamonds</a></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Коллекция ссылок на посты в ЖЖ&lt;br&gt;
    
    </summary>
    
    
    
      <category term="link" scheme="http://spiiin.github.io/tags/link/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://spiiin.github.io/blog/16107/"/>
    <id>http://spiiin.github.io/blog/16107/</id>
    <published>2020-07-01T12:45:28.000Z</published>
    <updated>2020-09-15T16:28:46.711Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Hello, world!</strong><br>Немного тестов разметки<br><a id="more"></a></p><h1 id="Заголовок"><a href="#Заголовок" class="headerlink" title="Заголовок"></a>Заголовок</h1><h2 id="Подраздел"><a href="#Подраздел" class="headerlink" title="Подраздел"></a>Подраздел</h2><figure class="highlight nim"><table><tr><td class="code"><pre><span class="line">echo <span class="string">"code without line numbers"</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>hello.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Code"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"with"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"line"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"numbers"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; end;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>hello.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="built_in">std</span> &#123;</span><br><span class="line">    <span class="keyword">template</span>&lt;&gt; <span class="class"><span class="keyword">struct</span> <span class="title">tuple_element</span>&lt;0,Config&gt; &#123;</span> <span class="keyword">using</span> type = <span class="built_in">std</span>::string_view; &#125;;</span><br><span class="line">    <span class="keyword">template</span>&lt;&gt; <span class="class"><span class="keyword">struct</span> <span class="title">tuple_element</span>&lt;1,Config&gt; &#123;</span> <span class="keyword">using</span> type = <span class="built_in">std</span>::<span class="keyword">size_t</span>; &#125;;</span><br><span class="line">    <span class="keyword">template</span>&lt;&gt; <span class="class"><span class="keyword">struct</span> <span class="title">tuple_element</span>&lt;2,Config&gt; &#123;</span> <span class="keyword">using</span> type = <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp;; &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        gist    </div>    <div class='spoiler-content'>        <script src="//gist.github.com/44721f2e5a70294fa390218ad92385e4.js?file=james_bond_nim.nim"></script>    </div></div><blockquote><p>“Citate from me”</p><footer><strong>spiiin</strong></footer></blockquote><ul><li>список1</li><li>список2<ul><li>список21</li><li>список22<ul><li><em>список221</em></li></ul></li></ul></li><li>список3</li></ul><p><strong><code>code-bold</code></strong> <code>code</code></p><div class="table-container"><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center"><em>right-aligned</em></td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table></div><p>Backticks escape: `are` these!</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Hello, world!&lt;/strong&gt;&lt;br&gt;Немного тестов разметки&lt;br&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://spiiin.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Игра в сегу по сети.</title>
    <link href="http://spiiin.github.io/blog/8741/"/>
    <id>http://spiiin.github.io/blog/8741/</id>
    <published>2014-12-22T04:49:00.000Z</published>
    <updated>2020-09-15T16:55:44.924Z</updated>
    
    <content type="html"><![CDATA[<style>.embed-container {    position: relative;    padding-bottom: 56.25%;    height: 0;    overflow: hidden;    max-width: 100%;  }  .embed-container iframe, .embed-container object, .embed-container embed {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;  }  </style><div class="embed-container"><iframe src="https://www.youtube.com/embed/m6OeJYWAJ6c" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style&gt;.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }

      
    
    </summary>
    
    
    
      <category term="hack" scheme="http://spiiin.github.io/tags/hack/"/>
    
      <category term="link" scheme="http://spiiin.github.io/tags/link/"/>
    
      <category term="sega" scheme="http://spiiin.github.io/tags/sega/"/>
    
      <category term="hardware" scheme="http://spiiin.github.io/tags/hardware/"/>
    
  </entry>
  
  <entry>
    <title>Battletoads heavy glitches</title>
    <link href="http://spiiin.github.io/blog/57614/"/>
    <id>http://spiiin.github.io/blog/57614/</id>
    <published>2013-01-08T15:21:00.000Z</published>
    <updated>2020-09-15T17:02:24.441Z</updated>
    
    <content type="html"><![CDATA[<style>.embed-container {    position: relative;    padding-bottom: 56.25%;    height: 0;    overflow: hidden;    max-width: 100%;  }  .embed-container iframe, .embed-container object, .embed-container embed {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;  }  </style><div class="embed-container"><iframe src="https://www.youtube.com/embed/bOweqz4cDlA" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div><p>Ну и весь канал у них там такой</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style&gt;.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }

      
    
    </summary>
    
    
    
      <category term="nes" scheme="http://spiiin.github.io/tags/nes/"/>
    
      <category term="hack" scheme="http://spiiin.github.io/tags/hack/"/>
    
      <category term="games" scheme="http://spiiin.github.io/tags/games/"/>
    
  </entry>
  
  <entry>
    <title>Сортировка за 4 с половиной минуты</title>
    <link href="http://spiiin.github.io/blog/12182/"/>
    <id>http://spiiin.github.io/blog/12182/</id>
    <published>2011-04-12T20:20:00.000Z</published>
    <updated>2020-09-15T16:58:37.916Z</updated>
    
    <content type="html"><![CDATA[<style>.embed-container {    position: relative;    padding-bottom: 56.25%;    height: 0;    overflow: hidden;    max-width: 100%;  }  .embed-container iframe, .embed-container object, .embed-container embed {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;  }  </style><div class="embed-container"><iframe src="https://www.youtube.com/embed/CmPA7zE8mx0" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style&gt;.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }

      
    
    </summary>
    
    
    
      <category term="link" scheme="http://spiiin.github.io/tags/link/"/>
    
  </entry>
  
  <entry>
    <title>Храброе львиное сердце</title>
    <link href="http://spiiin.github.io/blog/12483/"/>
    <id>http://spiiin.github.io/blog/12483/</id>
    <published>2010-12-03T14:27:00.000Z</published>
    <updated>2020-09-15T19:35:49.755Z</updated>
    
    <content type="html"><![CDATA[<p>Наша игра <a href="http://gaijin.ru/ru/games/braveheart/" target="_blank" rel="noopener">Braveheart</a> уже продаётся в <a href="http://itunes.apple.com/us/app/braveheart/id401885524?mt=8#" target="_blank" rel="noopener">AppStore</a>.<br><style>.embed-container {    position: relative;    padding-bottom: 56.25%;    height: 0;    overflow: hidden;    max-width: 100%;  }  .embed-container iframe, .embed-container object, .embed-container embed {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;  }  </style><div class="embed-container"><iframe src="https://www.youtube.com/embed/WUWBul6zN7s" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div><br>Чему я безумно рад.</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Наша игра &lt;a href=&quot;http://gaijin.ru/ru/games/braveheart/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Braveheart&lt;/a&gt; уже продаётся в &lt;a href=&quot;http://i
      
    
    </summary>
    
    
    
      <category term="games" scheme="http://spiiin.github.io/tags/games/"/>
    
      <category term="log" scheme="http://spiiin.github.io/tags/log/"/>
    
      <category term="dev" scheme="http://spiiin.github.io/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>Заточка инструментов</title>
    <link href="http://spiiin.github.io/blog/26119/"/>
    <id>http://spiiin.github.io/blog/26119/</id>
    <published>2010-12-03T08:31:00.000Z</published>
    <updated>2020-09-15T19:36:18.588Z</updated>
    
    <content type="html"><![CDATA[<p>Объединение файлов в “проект”, часто используемое в IDE, очень удобно для простого управления набором файлов и быстрого переключения между наборами. Не хватает такой возможности в других программах общего назначения, которыми постоянно пользуюсь.  </p><ul><li>В Firefox для целей упорядочивания вкладок можно использовать плагин <a href="https://addons.mozilla.org/en-US/firefox/addon/5890/" target="_blank" rel="noopener">Tree Style Tab</a>, чтобы выстраивать мышкой иерархии открытых страниц, но нет нормального сохранения набора.  </li><li>Notepad++ умеет сохранять и загружать группу документов (в меню File-&gt;Save session/ Load session), но не умеет разделять набор открытых файлов на подгруппы.  </li><li>Для Total Commander’а похожих плагинов не знаю, поэтому тупо держу две копии, с разными наборами вкладок, панелей и закладок (ctrl+d которые).  </li><li>Для квипа и скайпа тоже не предусмотрены отдельные настройки для разных групп контактов, но можно держать несколько аккаунтов для разных целей (общение с друзьями/общение по работе/“нужные” люди).</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Объединение файлов в “проект”, часто используемое в IDE, очень удобно для простого управления набором файлов и быстрого переключения межд
      
    
    </summary>
    
    
    
      <category term="dev" scheme="http://spiiin.github.io/tags/dev/"/>
    
  </entry>
  
  <entry>
    <title>windows command multiline</title>
    <link href="http://spiiin.github.io/blog/26294/"/>
    <id>http://spiiin.github.io/blog/26294/</id>
    <published>2010-11-01T08:03:00.000Z</published>
    <updated>2020-09-15T19:33:35.218Z</updated>
    
    <content type="html"><![CDATA[<p>В коммандных файлах windows можно делать списки из нескольких строк с помощью символа “^”: </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set m&#x3D;^</span><br><span class="line">1 ^</span><br><span class="line">2 ^</span><br><span class="line">3</span><br><span class="line">for %%f in (%m%) do ^</span><br><span class="line">echo %%f</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;В коммандных файлах windows можно делать списки из нескольких строк с помощью символа “^”: &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="codespell" scheme="http://spiiin.github.io/tags/codespell/"/>
    
  </entry>
  
  <entry>
    <title>Проблема абстракций</title>
    <link href="http://spiiin.github.io/blog/64509/"/>
    <id>http://spiiin.github.io/blog/64509/</id>
    <published>2010-10-26T09:06:00.000Z</published>
    <updated>2020-09-15T19:14:24.829Z</updated>
    
    <content type="html"><![CDATA[<p>В том, что по-хорошему всегда нужно знать, что под ними лежит. Иначе они протекут.  </p><p>Хорошая привычка перед борьбой с багами рефакторить код.<br>Todo:  </p><ul><li>Убрать over-использование таблиц в скриптах, там где можно обойтись массивами, индексация сильно дешевле (Если в языке есть несколько коллекций, надо знать особенности каждой (и показать незнающим :) ).  </li><li>Если есть возможность использования абстракции с целью уменьшить число вероятных ошибок, ей нельзя пренебрегать. (спрятать циклы с переменными в локальные функции и заменить на перебор через foreach).  </li><li>Поменьше переменных состояния. Лучше пересчитать что-то в функции лишний раз без сохранения значения, чем напороться на баг, когда кто-то в другом файле захочет напрямую записать в поле, которое задумывалось, чтобы сохранить значение подсчитанного выражения для использования в соседней функции. В скриптах – <a href="http://users.livejournal.com/_winnie/254903.html" target="_blank" rel="noopener">сильно лучше</a>, одна выборка из хеш-таблицы (а обращение к переменной по имени там тоже выборка) может быть медленнее перерассчета длинного арифметического выражения.</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;В том, что по-хорошему всегда нужно знать, что под ними лежит. Иначе они протекут.  &lt;/p&gt;
&lt;p&gt;Хорошая привычка перед борьбой с багами рефак
      
    
    </summary>
    
    
    
      <category term="squirell, dev" scheme="http://spiiin.github.io/tags/squirell-dev/"/>
    
  </entry>
  
  <entry>
    <title>Кусочек</title>
    <link href="http://spiiin.github.io/blog/55208/"/>
    <id>http://spiiin.github.io/blog/55208/</id>
    <published>2010-10-24T19:56:00.000Z</published>
    <updated>2020-09-15T19:14:24.826Z</updated>
    
    <content type="html"><![CDATA[<p>Бывает такое состояние, если долго не спишь или почти-почти засыпаешь, когда внимание перестает концентрироваться на чем-то одном и замечаешь сразу все одновременно. В таком состоянии можно услышать что-то новое в песне, которую слышал уже двадцать раз или заметить на фотографиях детали, которых никогда не замечал. Сегодня сидел так на горе в Чуфут-Кале рядом с няшкой, грелся на солнышке и слушал, как мужик внизу играет на флейте. Если есть в жизни кусочки, из которых собирается счастье, то они находятся именно вот так.</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Бывает такое состояние, если долго не спишь или почти-почти засыпаешь, когда внимание перестает концентрироваться на чем-то одном и замеч
      
    
    </summary>
    
    
    
      <category term="log" scheme="http://spiiin.github.io/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>ZeroHour++</title>
    <link href="http://spiiin.github.io/blog/45458/"/>
    <id>http://spiiin.github.io/blog/45458/</id>
    <published>2010-09-21T15:36:00.000Z</published>
    <updated>2020-09-15T19:43:00.507Z</updated>
    
    <content type="html"><![CDATA[<p><strong>C++ Entertaiment general</strong> <img src="http://pics.livejournal.com/spiiin/pic/0000tfw2" alt="toxin truck"></p><p><strong>Грузовики с токсинами.</strong>Взрывающиеся грузовики Entertainment-генерала нагружены ящиками с тяжелым биологическим оружием, таким как Boost и Qt, способными заразить многие мегабайты территории. <img src="http://pics.livejournal.com/spiiin/pic/0000ww7r" alt="antrax-gamma"></p><p>  <strong>Антракс-гамма</strong>   На высоких уровнях войска генерала могут использовать такое опасное оружие, как исключения, которые наносят непоправимый урон окружающей среде. <img src="http://pics.livejournal.com/spiiin/pic/0000xtsa" alt="mutations"></p><p><strong>Мутации.</strong> Cолдаты генерала вооружены химическими парадигмами и шаблонами. Союзные войска защищены специальными костюмами, но попытки войск соперника разобраться в коде этого генерала иногда могут привести к необратимым мутациям мозга. <img src="http://pics.livejournal.com/spiiin/pic/0000yeb0" alt="C++ Gamedev General"></p><hr><p><strong>С++ Gamedev General</strong> <img src="http://pics.livejournal.com/spiiin/pic/0000zsb0" alt="fanatics"></p><p> <strong>Фанатики.</strong> </p><p> Фанатики. Gamedev-генерал обладает самыми яростными фанатиками, уверяющими, что их код самый быстрый. Они могут легко использовать функции длинной в несколько сотен строк, неподдерживаемые никакими войсками других генералов. Фанатик, посаженный в угнанную технику, получает способность “ассемблерные вставки”, которая значительно повышает скорость кода и опасность фанатика на форумах, но делает его еще более опасным для союзных войск.</p><p> <img src="http://pics.livejournal.com/spiiin/pic/00010k4k" alt="bikes"></p><p> <strong>Легкие мотоциклы.</strong> </p><p> Техники не содержат виртуальных функций, поэтому являются самыми легкими и быстрыми машинами. Но даже этого Gamedev-генералу мало и поэтому его инженеры модифицируют двигатели непереносимыми функциями и используют приемы, именуемые другими инженерами “байтоёбством”. Это позволяет техникам развивать невероятную скорость, с которой они несутся к противнику и часто взрываются прямо в его стане.</p><p> <img src="http://pics.livejournal.com/spiiin/pic/00011cfq" alt="bomb"></p><p> <strong>Камикадзе.</strong></p><p>Экземпляры войск и строений Gamedev-генерала иногда содержат заряды утекающей памяти, поэтому при уничтожении юнита этого генерала может произойти страшный взрыв.</p><p><img src="http://pics.livejournal.com/spiiin/pic/00012akc" alt="script"></p><hr><p><strong>С++ Script General</strong> <img src="http://pics.livejournal.com/spiiin/pic/00013gd2" alt="mask"></p><p><strong>Маскировка кода.</strong> </p><p>Скриптовый генерал имеет опыт войны на аутсорс-фронте, он командовал войсками php и lua, с которыми приобрел опыт быстрого построения замаскированных зданий в самых неожиданных местах. Соперники часто вынуждены очень долго искать замаскированные похожие друг на друга строения, некоторые из которых являются пустышками, а другие - ловушками. Также может легко замаскировать тип аргумента функции под строковый.</p><p><img src="http://pics.livejournal.com/spiiin/pic/00014x4g" alt="fake"></p><p><strong>Ложные структуры.</strong></p><p> Чтобы дезориентировать врага, script-генерал может использовать цепочку вызовов функций. Например, скрипт вызывает нативной код, который вызывает еще один скриптовый метод, делегирующий вызов другому классу. Генеральские умения могут увеличивать глубину вложенности переадресаций.</p><p><img src="http://pics.livejournal.com/spiiin/pic/000159c5" alt="bum"></p><p> <strong>Внезапность.</strong> </p><p> На высоких уровнях генерал получает возможность использовать полезные умения, которые рассчитаны на элемент неожиданности и направлены против неподготовленного противника. Так, генерал без колебаний использует функции как объекты первого класса, может попытаться обхитрить соперника хвостовой рекурсией или неожиданно вообще начать писать на другом, неизвестном противнику языке. </p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;C++ Entertaiment general&lt;/strong&gt; &lt;img src=&quot;http://pics.livejournal.com/spiiin/pic/0000tfw2&quot; alt=&quot;toxin truck&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Гр
      
    
    </summary>
    
    
    
      <category term="fun" scheme="http://spiiin.github.io/tags/fun/"/>
    
  </entry>
  
  <entry>
    <title>Не хотет!</title>
    <link href="http://spiiin.github.io/blog/58502/"/>
    <id>http://spiiin.github.io/blog/58502/</id>
    <published>2010-09-02T14:35:00.000Z</published>
    <updated>2020-09-15T19:14:24.821Z</updated>
    
    <content type="html"><![CDATA[<p>Правила относительно желаний, которые помогают упростить жизнь. </p><ol><li>Если чего-то не хочется - это не нужно. 2. Если есть сомнения, хочется или нет - скорее всего тоже не нужно. 3. Если кажется, что чего-то хочется, но ты ничего не делаешь, что получить это - это не нужно. 4. Если чего-то хочется, но возможности получить нет, надо что-то менять. Или возможности или желания. 5. Если чего-то не хочется, но сделать нужно, то стоит сделать это так, чтобы было весело. 6. Если чего-то хочется, нужно сделать все, чтобы достигнуть цели. 7. И прекратить тратить деньги и время на то, что не нужно!</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Правила относительно желаний, которые помогают упростить жизнь. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Если чего-то не хочется - это не нужно. 2. Если есть сомнен
      
    
    </summary>
    
    
    
      <category term="log" scheme="http://spiiin.github.io/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>PyBrewery</title>
    <link href="http://spiiin.github.io/blog/31473/"/>
    <id>http://spiiin.github.io/blog/31473/</id>
    <published>2010-05-19T14:12:00.000Z</published>
    <updated>2020-09-15T19:14:24.818Z</updated>
    
    <content type="html"><![CDATA[<p>Либа для контроля за пивоварней на питоне.<br><a href="http://code.google.com/p/pybrewery/" target="_blank" rel="noopener">http://code.google.com/p/pybrewery/</a>  </p><p><img src="http://pybrewery.googlecode.com/svn/pyrobot.brewery/trunk/docs/images/IMG_2699_small.jpg" alt=""></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Либа для контроля за пивоварней на питоне.&lt;br&gt;&lt;a href=&quot;http://code.google.com/p/pybrewery/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://code.go
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://spiiin.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Fairy tale</title>
    <link href="http://spiiin.github.io/blog/30718/"/>
    <id>http://spiiin.github.io/blog/30718/</id>
    <published>2010-04-21T22:15:00.000Z</published>
    <updated>2020-09-15T19:14:24.816Z</updated>
    
    <content type="html"><![CDATA[<p>На лавочке сидел человек с ноутбуком. Из его наушников слышалась музыка из какой-то старой 8-битной игры. На экране ноутбука отображалось синее окно, разделенное на 2 части.  </p><p> В левой части располагался код программы, написанный на каком-то си-подобном языке. Сама запущенная среда разработки, очевидно, работала из-под эмулятора. Кроме основного интерфейса на экране были элементы, нарисованные поверх всего остального и отображающие различные числа из памяти, в которую был загружен компилятор.  </p><p> Сейчас во всех этих дополнительных окнах были лишь нули, но как только программист запустил процесс компиляции программы, все изменилось. Числа в окнах стали меняться с огромной скоростью, а в правой части экрана начал отрисовываться граф. Он разрастался, причудливо выбрасывая новые отростки в разные стороны, иногда разворачивался так, чтобы похожие элементы разных цветов, форм и размеров становились ближе друг к другу, узлы соединений распутывались, сложные связи в виде длинных линий заменялись на более простые.   </p><p>Внезапно процесс замедлился, мелькающие числа стали различимыми, а изменения графа практически прекратились. Программист внимательно смотрел на создаваемую компилятором по инструкциям картину, отражающую рождение написанной им программы. Иногда он касался элемента графа пальцем и не давал ему двигаться, иногда “отрезал” подграфы, перемешивал их в отдельном окне и соединял блоки вместе в нижней части экрана, где располагалась “лаборатория” элементов. Из этой лаборатории он брал элементы и прикреплял их обратно так, что граф приобретал невероятную, фантастическую красоту.   </p><p>Одновременно с изменениями программиста код в левой части экрана тоже менялся. Изменения в тексте были незначительными, со временем лишь немного уменьшался его размер, граф же становился все более изящным. В итоге рисунок программы стал похож на какой-то неуловимый для глаза фрактал, а на экране загорелась надпись “Compilation complete. 0 errors, 0 warnings”. Программист сохранил результат, выключил ноутбук, закурил сигарету куда-то пошёл. Он был счастлив.</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;На лавочке сидел человек с ноутбуком. Из его наушников слышалась музыка из какой-то старой 8-битной игры. На экране ноутбука отображалось
      
    
    </summary>
    
    
    
      <category term="tales" scheme="http://spiiin.github.io/tags/tales/"/>
    
  </entry>
  
  <entry>
    <title>6502 asm, lua и немного магии</title>
    <link href="http://spiiin.github.io/blog/56249/"/>
    <id>http://spiiin.github.io/blog/56249/</id>
    <published>2010-04-19T10:27:00.000Z</published>
    <updated>2020-09-15T19:34:40.557Z</updated>
    
    <content type="html"><![CDATA[<style>.embed-container {    position: relative;    padding-bottom: 56.25%;    height: 0;    overflow: hidden;    max-width: 100%;  }  .embed-container iframe, .embed-container object, .embed-container embed {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;  }  </style><div class="embed-container"><iframe src="https://www.youtube.com/embed/-jbFjhBYCjg" allowfullscreen frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"></iframe></div><p>Драг-энд-дроп в том самом первом Марио  </p><p>В видеорелейтед есть еще nes-чудеса:<br><a href="http://www.youtube.com/watch?v=1XNTjVScm_8" target="_blank" rel="noopener">Super Mario Bros. 3 с рисованием преград мышью</a><br><a href="http://www.youtube.com/watch?v=1-Hc1UQPnX8" target="_blank" rel="noopener">Megaman, выпускающей смертельные лучи из глаз</a><br><a href="http://www.youtube.com/watch?v=LT1eiLiMWkk" target="_blank" rel="noopener">Тетрис с возможностью игры онлайн</a><br><a href="http://www.youtube.com/watch?v=58JinErWQJY" target="_blank" rel="noopener">Брейдулятор для возврата во времени в любой игре</a> и<br><a href="http://www.youtube.com/watch?v=ZH43t1C3RWg" target="_blank" rel="noopener">Genetic programmed bot, рубящийся в “Марио”</a>  </p><p>Архив со скриптами валяется на сайте эмулятора <a href="http://fceux.com/web/home.html" target="_blank" rel="noopener">FCEUX</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style&gt;.embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
  }

      
    
    </summary>
    
    
    
      <category term="nes" scheme="http://spiiin.github.io/tags/nes/"/>
    
      <category term="hack" scheme="http://spiiin.github.io/tags/hack/"/>
    
      <category term="games" scheme="http://spiiin.github.io/tags/games/"/>
    
  </entry>
  
  <entry>
    <title>Бывают либы как либы...</title>
    <link href="http://spiiin.github.io/blog/11703/"/>
    <id>http://spiiin.github.io/blog/11703/</id>
    <published>2010-03-29T21:38:00.000Z</published>
    <updated>2020-09-15T19:23:54.762Z</updated>
    
    <content type="html"><![CDATA[<p>.. а бывают такие, знакомиться с которыми лучше сразу с раздела <code>Troubleshooting</code>. </p><p>Геймдизайнер прислал описание интересного бага – игра падает, если сменить дислокацию. То есть, если физически перейти с айфоном с одного места в другое.</p><p>Один из программистов вспомнил, что когда он ходил в соседний офис, игра тоже один раз упала. Сначала подумал, что в код закралась какая-то глупая незамеченная ошибка – недавно реализовали много мелких фич в движке. Оказалось – нет, действительно, если играть, положив девайс перед собой, то все будет нормально, а если ходить с ним по офису туда-сюда, то игра рано или поздно падает, не оставляя в логах никакой полезной информации, кроме того, что произошло разыменование нулевого указателя. </p><p>При том, что игру уже давно пора было релизить, ситуация вызвала не улыбку, а истерический смех. Где-то полтора дня потратил на изучение поведения приложения с отключением добавленных фич, изучение добавленной игровой логики, исследование поведения игры при запущенных профилирующих инструментах XCode и построение фантастических теорий, как акселерометр может ронять игру. А потом - наткнулся на объяснение феномена в FAQ по интеграции использованной нами библиотеки <code>Crystal</code>, так и озаглавленное - <em>crash when rotating device</em>. Не вдаваясь в детальное описание возникующей ситуации, библиотека сама пытается отслеживать изменение ориентации устройства для того, чтобы рисоваться “лицом” к пользователю.</p><p>Падения лечатся простой установкой свойства класса либы <code>CrystalSettingShouldAutorotateWorkaround в @&quot;Yes&quot;</code>. Почему не поставить для параметра это значение по дефолту, если разработчикам известно, что может возникнуть такая ошибка – загадка.</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;.. а бывают такие, знакомиться с которыми лучше сразу с раздела &lt;code&gt;Troubleshooting&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Геймдизайнер прислал описание интер
      
    
    </summary>
    
    
    
      <category term="iphone" scheme="http://spiiin.github.io/tags/iphone/"/>
    
  </entry>
  
  <entry>
    <title>Fuck yeah</title>
    <link href="http://spiiin.github.io/blog/24358/"/>
    <id>http://spiiin.github.io/blog/24358/</id>
    <published>2010-03-28T20:48:00.000Z</published>
    <updated>2020-09-15T19:14:24.808Z</updated>
    
    <content type="html"><![CDATA[<p>За последние три дня успел исправить последний (пока?) баг в игре, поиграть в шахматы, выехать на велосипеде за город, пофотографировать на найденный дома в груде хлама <a href="http://www.zenit.istra.ru/mans/zorki-6/zorki-6.html" target="_blank" rel="noopener">“Зоркий-6”</a> и перечитать <a href="http://lib.ru/SIMAK/goblins.txt" target="_blank" rel="noopener" title="отличная смесь из юмористического фэнтези и элементов научной и космической фантастики">“Заповедник гоблинов”</a> Клиффорда Саймака.</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;За последние три дня успел исправить последний (пока?) баг в игре, поиграть в шахматы, выехать на велосипеде за город, пофотографировать 
      
    
    </summary>
    
    
    
      <category term="log" scheme="http://spiiin.github.io/tags/log/"/>
    
  </entry>
  
</feed>
